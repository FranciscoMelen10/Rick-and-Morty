---
import Principal from "../../../layout/principal.astro";
import Boton from "../../../components/boton.astro";
import AppearancesCharacter from "../../../components/Apperances/appearances_character.astro";

// Parametro que se obtendra de la url "/Episode/{name}" para realizar las consultas
const { episode } = Astro.params;

export async function getStaticPaths() {
  // Almacenara intancias de objetos de la información de todos los episodios donde contendra la rutas dinamicas para que astro los se haga automaticamente haciendo las consultas atravez del id de cada episodio
  let api_array = [];

  // variable temporal para almacenar de tipo objeto los links de cada página y agregarlo al arreglo "api_array"
  let tempo;

  // consulta a la api
  const data = await fetch("https://rickandmortyapi.com/api/episode").then(
    (response) => response.json()
  );
  for (let index = 1; index < data.info.count + 1; index++) {
    tempo = { params: { episode: "" + index } };
    api_array.push(tempo);
  }

  // retornara todos los links de las paginas de forma dinámica para mostrar todos los datos de los episodios de la api
  return api_array;
}

// contendra en formato json la api y usarlo afuera del servidor dentro del cliente
let informacion;
try {
  const response = await fetch(
    "https://rickandmortyapi.com/api/episode/" + episode
  );
  informacion = await response.json();
} catch (error) {
  console.error(error);
}
---

<Principal title={informacion.name}>
  <article class="contenedor_episode">
    <div class="informacion_episode">
      <picture>
        <img
          src="../../../../public/Fondo episode.jpg"
          alt="Fondo de episodes"
          transition:name=`imagen_episode_${informacion.id}`
        />
      </picture>
      <section class="informacion_principal">
        <p class="text">
          Name: <span>{informacion.name}</span>
        </p>
        <p class="text">Time: <span>{informacion.air_date}</span></p>
        <p class="text">Episode: <span>{informacion.episode}</span></p>
        <p class="text">Created: <span>{informacion.created}</span></p>
      </section>
    </div>

    <div class="contenedor_paticipaciones">
      <p class="title">Characters Appearances</p>
      <div class="participaciones">
        <!-- Agregar las apariciones de cada personaje en este div -->
        {
          informacion.characters.map((info) => {
            return <AppearancesCharacter url={info} />;
          })
        }
      </div>
    </div>
    <Boton name="Episode" />
  </article>
</Principal>

<style>
  .contenedor_paticipaciones {
    padding: 10vh 0 0 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    width: 100%;
  }

  article {
    padding: 10vh 0 20vh 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  picture {
    width: 550px;
  }

  .informacion_episode {
    width: 80%;
    max-width: 1100px;
    display: flex;
    margin: 0;
    padding: 0;
    background-color: var(--bg_hr);
    border-radius: 30px;
  }

  .informacion_principal {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    margin: 40px;
    font-family: sans-serif;
  }

  img {
    width: 100%;
    height: 100%;
    border-radius: 20px 0 0 20px;
  }

  .text {
    color: var(--vrd_clr);
    font-size: 20px;
    font-weight: 900;
    text-transform: uppercase;
    font-family: "Montserrat", sans-serif;
  }

  .text span {
    color: var(--letras);
    font-weight: 400;
    text-transform: capitalize;
  }

  .status {
    padding: 10px;
    border-radius: 10px;
    width: fit-content;
    font-weight: 700;
    color: var(--letras);
  }

  a {
    color: var(--vrd_clr);
  }

  .participaciones {
    padding: 10vh 0;
    width: 80%;
    color: var(--letras);
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    gap: 30px;
  }

  .title {
    font-size: 40px;
    font-family: Get Schwifty;
    font-weight: 800;
    color: var(--vrd_drk);
  }

  @media screen and (max-width: 950px) {
    .informacion_episode {
      flex-direction: column;
      width: 80%;
    }

    picture {
      width: 100%;
    }

    img {
      border-radius: 20px 20px 0 0;
    }
  }
</style>
