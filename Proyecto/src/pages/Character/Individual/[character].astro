---
import Principal from "../../../layout/principal.astro";
import Participaciones from "../../../components/participaciones_cap.astro";
import Boton from "../../../components/boton.astro";

const {character} = Astro.params

export async function getStaticPaths() {
  let api_array = []
  let tempo 
  const data = await fetch("https://rickandmortyapi.com/api/character").then((response) => response.json());
  for (let index = 1; index < data.info.count ; index++) {
    tempo ={params: { character: "" + index }}
    api_array.push(tempo)
  }
  return api_array
}

let informacion;
try {
  const response = await fetch(
    "https://rickandmortyapi.com/api/character/" + character
  );
  informacion = await response.json();
} catch (error) {
  console.error(error);
}
let color;
if (informacion.status === "Alive") {
  color = "green";
} else {
  color = "red";
}
---

<Principal>
  <article class="contenedor_character">
    <div class="informacion_character">
      <picture>
        <img src={informacion.image} alt="" transition:name=
        `imagen_${informacion.id}`/>
      </picture>
      <section class="informacion_principal">
        <p class="status" style={`background-color:${color}`}>
          {informacion.status}
        </p>
        <p class="text">Name: <span transition:name=
          `name_${informacion.id}`>{informacion.name}</span></p>
        <p class="text">status: <span >{informacion.status}</span></p>
        <p class="text">Species: <span>{informacion.species}</span></p>
        <p class="text">Gender: <span>{informacion.gender}</span></p>
        <p class="text">Location: <span>{informacion.location.name}</span></p>
        <p class="text">Origin: <span>{informacion.origin.name}</span></p>
        <p class="text">
          API Character: <a href={informacion.url}>Link API</a>
        </p>
      </section>
    </div>

    <div class="contenedor_paticipaciones">
      <p class="title">Episodes Appearances</p>
      <div class="participaciones">
        <!-- Agregar las apariciones de cada personaje en este div -->
        {
          informacion.episode.map((info) => {
            return <Participaciones url={info} />;
          })
        }
      </div>
    </div>
    <Boton name="Character" />
  </article>
</Principal>

<style>
  .contenedor_paticipaciones {
    padding: 20vh 0 0 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  article {
    padding: 20vh 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  picture {
    width: 550px;
  }

  .informacion_character {
    width: 70%;
    display: flex;
    margin: 0;
    padding: 0;
    background-color: var(--bg_hr);
    border-radius: 30px;
  }

  .informacion_principal {
    width: 50%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 10px 40px;
    font-family: sans-serif;
  }

  img {
    width: 100%;
    height: 100%;
    border-radius: 20px 0 0 20px;
  }

  .text {
    color: var(--letras);
    font-size: 20px;
    font-weight: 900;
    text-transform: uppercase;
  }

  .text span {
    color: var(--letras);
    font-weight: 100;
    text-transform: capitalize;
  }

  .status {
    padding: 10px;
    border-radius: 10px;
    width: fit-content;
    font-weight: 700;
    color: var(--letras);
  }

  a {
    color: var(--vrd_clr);
  }

  .participaciones {
    padding: 10vh 0;
    width: 80%;
    color: var(--letras);
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    gap: 30px;
  }

  .title {
    font-size: 36px;
    font-family: sans-serif;
    font-weight: 800;
    color: var(--letras);
  }

  @media screen and (max-width: 980px) {
    .informacion_character{
      flex-direction: column;
    }

    picture{
      width: 100%;
    }

    img{
      border-radius: 20px 20px 0 0;
    }
  }
</style>
