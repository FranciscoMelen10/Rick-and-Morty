---
interface Props {
  size_page: number;
  current: string;
  name: string;
}

const { size_page, current, name } = Astro.props;

let paginacion = [];
let links;
let localizacion;

for (let index = 1; index <= size_page; index++) {
  links = { pagina: `/${name}/${index}`};
  paginacion.push(links);
}
---

<div class="contenedor__paginacion">
  {
    paginacion.map((info, index) => {
      if (index === 0) {
        localizacion = (current === `/${name}`) ? "activate" : "";
        return (
          <a href=`/${name}` class=` links ${localizacion}` >
            {index + 1}
          </a>
        );
      } 
      else {
        localizacion = (current === info.pagina) ? "activate" : "";
        return (
          <a href={info.pagina} class=` links ${localizacion}` >
            {index + 1}
          </a>
        );
      }
    })
  }
</div>

<style>
  .contenedor__paginacion {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    padding: 20px;
    border-radius: 20px;
    margin: 5vh 0;
    width: 80%;
    gap: 15px;
  }

  .links {
    background: var(--bg_hr);
    width: 20px;
    text-align: center;
    padding: 5px;
    border: none;
    border-radius: 5px;
    font-weight: bold;
    letter-spacing: 5px;
    color: var(--vrd_drk);
    text-decoration: none;
    transition: all 1000ms;
    position: relative;
    overflow: hidden;
    outline: 2px solid var(--vrd_drk);
  }

  .links:hover, .activate {
    color: #000000;
    transform: scale(1.1);
    background: var(--vrd_drk);
    outline: 2px solid var(--vrd_drk);
    box-shadow: 4px 5px 17px -4px var(--vrd_drk);
  }

  .links::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 0;
    height: 100%;
    background: var(--vrd_drk);
    z-index: -1;
    transition: width 0.5s;
  }

  .links:hover::before {
    width: 100%;
  }

  @media screen and (max-width: 990px) {
    .links{

    }
  }
</style>
