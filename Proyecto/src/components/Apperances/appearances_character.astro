---
interface Props {
  url: string;
}

// url: url de la api para hacer las consultas de los personajes de la serie
const { url } = Astro.props;

// contendra en formato json la api y usarlo afuera del servidor dentro del cliente
let informacion; 
try {
  const response = await fetch(`${url}`);
  informacion = await response.json();
} catch (error) {
  console.error(error);
}

let color; // se utilizara para determinar el status de cada personaje y asignarles un dise√±o unico para identificar si esta vivo (verde) o si esta muerto (rojo)
if (informacion.status === "Alive") {
  color = "green";
} else {
  color = "red";
}
---

<article
  class="contenedor_character"
  slot="informacion_api"
  id={informacion.id}
>
  <img
    src={informacion.image}
    alt=`Personaje_${informacion.name}`
    transition:name=`imagen_${informacion.id}`
  />
  <section class="info_character">
    <p class="name" transition:name=`name_${informacion.id}`>
      {informacion.name}
    </p>
    <p class="status" style={`background-color:${color}`}>
      {informacion.status}
    </p>
  </section>
  <a href=`../../Character/Individual/${informacion.id}` class="click_more"
    >Click More</a
  >
</article>

<style>
  .contenedor_character {
    background-color: var(--bg_hr);
    border-radius: 20px;
    position: relative;
    transition: 0.5s ease all;
    font-family: "open sans", sans-serif;
    width: 300px;
    height: 450px;
  }

  .contenedor_character img {
    border-radius: 20px 20px 0 0;
  }

  .status {
    padding: 10px;
    border-radius: 10px;
    width: fit-content;
    font-weight: 700;
    font-size: 20px;
  }

  .name {
    font-size: 20px;
    font-weight: 800;
  }

  .info_character {
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: space-evenly;
    height: 150px;
  }

  .info_character p {
    margin: 10px;
  }

  .click_more {
    padding: 1em 0;
    background: #00ac7c;
    display: flex;
    align-items: center;
    color: var(--letras);
    justify-content: center;
    height: 2.5em;
    width: 100%;
    text-decoration: none;
    transition: all 80ms;
    font-weight: 600;
    text-transform: uppercase;
    bottom: 0;
    border-radius: 0 0 10px 10px;
    margin: 0;
    position: absolute;
    opacity: 0;
  }

  .contenedor_character:hover .click_more {
    opacity: 1;
    text-decoration: underline;
  }

  .contenedor_character:hover {
    cursor: pointer;
    transform: scale(0.9);
  }

  .contenedor_boton {
    text-align: center;
  }
</style>
